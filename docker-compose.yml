services:
  postgres:
    image: postgres:15.5-alpine3.18
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mustachebash
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - type: bind
        source: ./postgres-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./schema/v1schema.sql
        target: /docker-entrypoint-initdb.d/schema.sql
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host

  api-installer:
    build:
      context: api
      target: build-deps
    image: mustachebash-api:dev
    pull_policy: never
    command: sh -c "rm -rf /mustachebash/dist"
    environment:
        NODE_ENV: development
    volumes:
      - type: bind
        source: ./api
        target: /mustachebash
      - type: volume
        target: /mustachebash/node_modules

  api:
    depends_on:
      nginx:
        condition: service_started
      postgres:
        condition: service_started
      api-installer:
        condition: service_completed_successfully
    image: mustachebash-api:dev
    pull_policy: never
    tty: true
    volumes_from:
      - api-installer
    command: npm run dev
    env_file:
      - ./secrets/.env
    environment:
      - NODE_ENV=development
      - NODE_OPTIONS="--no-deprecation"
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=mustachebash
      - GOOGLE_IDENITY_CLIENT_ID="198337388430-lc8hopgbqp8d1s4eajfqjhli3g5kbk2r.apps.googleusercontent.com"
      - JWT_SECRET=development
      - JWT_ORDER_SECRET=development
      - JWT_TICKET_SECRET=development
      - MAILGUN_DOMAIN=sales.mustachebash.com
      - MAILGUN_API_KEY
      - MAILCHIMP_DOMAIN=us10.api.mailchimp.com
      - MAILCHIMP_API_KEY
      - BRAINTREE_ENV=Sandbox
      - BRAINTREE_MERCHANT_ID
      - BRAINTREE_PUBLIC_KEY
      - BRAINTREE_PRIVATE_KEY

  web-installer:
    build:
      context: mustachebash.com
      target: build-deps
    image: mustachebash-web:dev
    pull_policy: never
    command: sh -c "rm -rf /build/dist /build/.astro"
    environment:
        NODE_ENV: development
    volumes:
      - type: bind
        source: ./mustachebash.com
        target: /build
      - type: volume
        target: /build/node_modules

  web:
    depends_on:
      nginx:
        condition: service_started
      web-installer:
        condition: service_completed_successfully
    image: mustachebash-web:dev
    pull_policy: never
    tty: true
    volumes_from:
      - web-installer
    command: npm start

  admin-installer:
    build:
      context: admin
      target: build-deps
    image: mustachebash-admin:dev
    pull_policy: never
    command: sh -c "rm -rf /build/dist"
    environment:
        NODE_ENV: development
    volumes:
      - type: bind
        source: ./admin
        target: /build
      - type: volume
        target: /build/node_modules

  admin:
    depends_on:
      nginx:
        condition: service_started
      admin-installer:
        condition: service_completed_successfully
    image: mustachebash-admin:dev
    pull_policy: never
    tty: true
    volumes_from:
      - admin-installer
    command: npm start

  # This is just for https
  nginx:
    image: nginx:1.27.3-alpine
    ports:
      - "443:443"
    volumes:
      - type: bind
        read_only: true
        source: ./nginx-dev.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        read_only: true
        source: ./secrets/localhost-cert.pem
        target: /etc/nginx/certs/localhost-cert.pem
      - type: bind
        read_only: true
        source: ./secrets/localhost-key.pem
        target: /etc/nginx/certs/localhost-key.pem
