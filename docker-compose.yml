version: '3.7'

volumes:
    api_init:
    api_node_modules:

services:
  postgres:
    image: postgres:15.5-alpine3.18
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - type: bind
        source: ./postgres-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./schema/v1schema.sql
        target: /docker-entrypoint-initdb.d/schema.sql
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host

  api-installer:
    image: node:20.10-alpine3.19
    working_dir: /workspace
    command: sh -c "rm -f /var/tmp/api-init/complete && rm -rf /workspace/dist && npm --no-update-notifier i && touch /var/tmp/api-init/complete"
    environment:
        NODE_ENV: development
    volumes:
      - type: bind
        source: ./api
        target: /workspace
      - type: volume
        source: api_node_modules
        target: /workspace/node_modules
      - type: volume
        source: api_init
        target: /var/tmp/api-init
  api:
    depends_on:
      - api-installer
      - nginx
      - postgres
    image: node:20.10-alpine3.19
    working_dir: /workspace
    tty: true
    volumes:
      - type: bind
        source: ./api
        target: /workspace
      - type: bind
        read_only: true
        source: ./await.sh
        target: /scripts/await.sh
      - type: volume
        source: api_node_modules
        target: /workspace/node_modules
      - type: volume
        source: api_init
        target: /var/tmp/api-init
    command: /scripts/await.sh /var/tmp/api-init/complete /scripts/await.sh node_modules/.bin/nodemon npm run debug
    env_file:
      - ./secrets/.env
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
      - GOOGLE_IDENITY_CLIENT_ID="198337388430-lc8hopgbqp8d1s4eajfqjhli3g5kbk2r.apps.googleusercontent.com"
      - JWT_SECRET=development
      - JWT_ORDER_SECRET=development
      - JWT_TICKET_SECRET=development
      - MAILGUN_DOMAIN=sales.mustachebash.com
      - MAILGUN_API_KEY
      - MAILCHIMP_DOMAIN=us10.api.mailchimp.com
      - MAILCHIMP_API_KEY
      - BRAINTREE_ENV=Sandbox
      - BRAINTREE_MERCHANT_ID
      - BRAINTREE_PUBLIC_KEY
      - BRAINTREE_PRIVATE_KEY

  # This is just for https
  nginx:
    image: nginx:1.23.3-alpine
    ports:
      - "5000:8080"
    volumes:
      - ./nginx-dev.conf:/etc/nginx/conf.d/default.conf
      - ./rootCA.pem:/etc/nginx/certs/rootCA.pem
      - ./server.key:/etc/nginx/certs/server.key
      - ./server.crt:/etc/nginx/certs/server.crt
