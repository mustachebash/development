server {
	listen 80;
    listen [::]:80;
    server_name localhost;

	root /dist;
	index index.html;

	location / {
		try_files maintenance =404;
	}

    location = / {
        try_files index.html =404;
    }

    location ~^/(privacy-policy)/?$ {
        try_files privacy-policy.html =404;
    }

	# Static assets get served from spaces
	location ~^/(.*(png|jpg|gif|css|js)) {
        try_files $uri =404;
	}
}

map $http_origin $cors_header {
	default '';
	'~^https?://(localhost(:\d*)?|admin\.mustachebash\.com)$' "$http_origin";
}

server {
	listen 8080;
    listen [::]:8080;
    server_name localhost;

	location / {
		# Set headers for preflights
		if ($request_method = 'OPTIONS') {
			# Tell client that this pre-flight info is valid for 20 days
			add_header 'Access-Control-Allow-Origin' "$cors_header";
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
			add_header 'Access-Control-Expose-Headers' 'Location';
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 204;
		}

		try_files maintenance @api;
	}

	location @api {
		add_header 'Access-Control-Allow-Origin' "$cors_header" always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
		add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
		add_header 'Access-Control-Expose-Headers' 'Location' always;

		resolver 127.0.0.11;

		set $api api:4000;

		proxy_pass http://$api;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}
}
